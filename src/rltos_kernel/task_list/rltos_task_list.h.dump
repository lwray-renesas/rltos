<?xml version="1.0"?>
<dumps>
  <platform name="win64" char_bit="8" short_bit="16" int_bit="32" long_bit="32" long_long_bit="64" pointer_bit="64"/>
  <rawtokens>
    <file index="0" name="rltos/src/rltos_kernel/task_list/rltos_task_list.h"/>
    <tok fileIndex="0" linenr="1" column="1" str="/**x * @defgroup Rltos_task_list Task listx * @ingroup Rltos_taskx * The group defining the RLTOS task list - containing the scheduler.x * @addtogroup Rltos_task_list_api apix * The public API (interface) to the RLTOS task list module.x * @ingroup Rltos_task_listx * @{x */"/>
    <tok fileIndex="0" linenr="11" column="1" str="#"/>
    <tok fileIndex="0" linenr="11" column="2" str="ifndef"/>
    <tok fileIndex="0" linenr="11" column="9" str="RLTOS_TASK_LIST_H_"/>
    <tok fileIndex="0" linenr="12" column="1" str="#"/>
    <tok fileIndex="0" linenr="12" column="2" str="define"/>
    <tok fileIndex="0" linenr="12" column="9" str="RLTOS_TASK_LIST_H_"/>
    <tok fileIndex="0" linenr="14" column="1" str="#"/>
    <tok fileIndex="0" linenr="14" column="2" str="ifndef"/>
    <tok fileIndex="0" linenr="14" column="9" str="RLTOS_RLTOS_H_"/>
    <tok fileIndex="0" linenr="15" column="1" str="#"/>
    <tok fileIndex="0" linenr="15" column="2" str="error"/>
    <tok fileIndex="0" linenr="15" column="8" str="&quot;Must include rltos.h before including this file in any source file&quot;"/>
    <tok fileIndex="0" linenr="16" column="1" str="#"/>
    <tok fileIndex="0" linenr="16" column="2" str="endif"/>
    <tok fileIndex="0" linenr="18" column="1" str="/** @brief pointer to task control structure - an opaque data type*/"/>
    <tok fileIndex="0" linenr="19" column="1" str="typedef"/>
    <tok fileIndex="0" linenr="19" column="9" str="struct"/>
    <tok fileIndex="0" linenr="19" column="16" str="task_ctl_t"/>
    <tok fileIndex="0" linenr="19" column="27" str="*"/>
    <tok fileIndex="0" linenr="19" column="29" str="p_task_ctl_t"/>
    <tok fileIndex="0" linenr="19" column="41" str=";"/>
    <tok fileIndex="0" linenr="21" column="1" str="/** @brief pointer to task list control structure - an opaque data type*/"/>
    <tok fileIndex="0" linenr="22" column="1" str="typedef"/>
    <tok fileIndex="0" linenr="22" column="9" str="struct"/>
    <tok fileIndex="0" linenr="22" column="16" str="task_list_t"/>
    <tok fileIndex="0" linenr="22" column="28" str="*"/>
    <tok fileIndex="0" linenr="22" column="30" str="p_task_list_t"/>
    <tok fileIndex="0" linenr="22" column="43" str=";"/>
    <tok fileIndex="0" linenr="24" column="1" str="/** @enum list_index_tx * @brief Provides enumerated type to index task item lists,x * This is used to index between a tasks state list (running or idle) and an x * auxilliary list for an object which the task is associated with waiting on.x */"/>
    <tok fileIndex="0" linenr="29" column="1" str="typedef"/>
    <tok fileIndex="0" linenr="29" column="9" str="enum"/>
    <tok fileIndex="0" linenr="30" column="1" str="{"/>
    <tok fileIndex="0" linenr="31" column="5" str="state_list"/>
    <tok fileIndex="0" linenr="31" column="16" str="="/>
    <tok fileIndex="0" linenr="31" column="18" str="0U"/>
    <tok fileIndex="0" linenr="31" column="20" str=","/>
    <tok fileIndex="0" linenr="31" column="25" str="/**&lt; Index of list where the item exists in the running or idle list*/"/>
    <tok fileIndex="0" linenr="32" column="5" str="aux_list"/>
    <tok fileIndex="0" linenr="32" column="25" str="/**&lt; Index of list where the item exists waiting on an object*/"/>
    <tok fileIndex="0" linenr="33" column="1" str="}"/>
    <tok fileIndex="0" linenr="33" column="2" str="list_index_t"/>
    <tok fileIndex="0" linenr="33" column="14" str=";"/>
    <tok fileIndex="0" linenr="35" column="1" str="/** @brief Function used to initialise the current task to point at the running lists head */"/>
    <tok fileIndex="0" linenr="36" column="1" str="void"/>
    <tok fileIndex="0" linenr="36" column="6" str="Scheduler_init"/>
    <tok fileIndex="0" linenr="36" column="20" str="("/>
    <tok fileIndex="0" linenr="36" column="21" str="void"/>
    <tok fileIndex="0" linenr="36" column="25" str=")"/>
    <tok fileIndex="0" linenr="36" column="26" str=";"/>
    <tok fileIndex="0" linenr="38" column="1" str="/** @brief Function used to set initial stack pointer, task entry function &amp; clear pointers to next and prev nodes.x * @param[inout] task_to_init - pointer to a task for initialisation.x * @param[in] init_sp - initial stack pointer value (after stack initialisation).x * @param[in] init_task_func - function pointer to tasks entry function.x * @param[in] priority - priority of task, lower is better.x * @param[in] task_is_running - if true - task placed in running list - otherwise placed in idle list.x */"/>
    <tok fileIndex="0" linenr="45" column="1" str="void"/>
    <tok fileIndex="0" linenr="45" column="6" str="Task_init"/>
    <tok fileIndex="0" linenr="45" column="15" str="("/>
    <tok fileIndex="0" linenr="45" column="16" str="p_task_ctl_t"/>
    <tok fileIndex="0" linenr="45" column="29" str="const"/>
    <tok fileIndex="0" linenr="45" column="35" str="task_to_init"/>
    <tok fileIndex="0" linenr="45" column="47" str=","/>
    <tok fileIndex="0" linenr="45" column="49" str="const"/>
    <tok fileIndex="0" linenr="45" column="55" str="stack_ptr_type"/>
    <tok fileIndex="0" linenr="45" column="70" str="init_sp"/>
    <tok fileIndex="0" linenr="45" column="77" str=","/>
    <tok fileIndex="0" linenr="45" column="79" str="p_task_func_t"/>
    <tok fileIndex="0" linenr="45" column="93" str="const"/>
    <tok fileIndex="0" linenr="45" column="99" str="init_task_func"/>
    <tok fileIndex="0" linenr="45" column="113" str=","/>
    <tok fileIndex="0" linenr="45" column="115" str="rltos_uint"/>
    <tok fileIndex="0" linenr="45" column="126" str="const"/>
    <tok fileIndex="0" linenr="45" column="132" str="priority"/>
    <tok fileIndex="0" linenr="45" column="140" str=","/>
    <tok fileIndex="0" linenr="45" column="142" str="bool"/>
    <tok fileIndex="0" linenr="45" column="147" str="const"/>
    <tok fileIndex="0" linenr="45" column="153" str="task_is_running"/>
    <tok fileIndex="0" linenr="45" column="168" str=")"/>
    <tok fileIndex="0" linenr="45" column="169" str=";"/>
    <tok fileIndex="0" linenr="47" column="1" str="/** @brief Function used to set deinit a task and removes from both running and idle lists.x * @param[inout] task_to_deinit - pointer to a task for deinitialisation.x */"/>
    <tok fileIndex="0" linenr="50" column="1" str="void"/>
    <tok fileIndex="0" linenr="50" column="6" str="Task_deinit"/>
    <tok fileIndex="0" linenr="50" column="17" str="("/>
    <tok fileIndex="0" linenr="50" column="18" str="p_task_ctl_t"/>
    <tok fileIndex="0" linenr="50" column="31" str="const"/>
    <tok fileIndex="0" linenr="50" column="37" str="task_to_deinit"/>
    <tok fileIndex="0" linenr="50" column="51" str=")"/>
    <tok fileIndex="0" linenr="50" column="52" str=";"/>
    <tok fileIndex="0" linenr="52" column="1" str="/** @brief Function used to initialise a task list - 0&apos;s size and sets HEAD &amp; INDEX to NULL.x * @param[inout] list_to_init - pointer to a list for initialisation.x */"/>
    <tok fileIndex="0" linenr="55" column="1" str="void"/>
    <tok fileIndex="0" linenr="55" column="6" str="Task_list_init"/>
    <tok fileIndex="0" linenr="55" column="20" str="("/>
    <tok fileIndex="0" linenr="55" column="21" str="p_task_list_t"/>
    <tok fileIndex="0" linenr="55" column="35" str="const"/>
    <tok fileIndex="0" linenr="55" column="41" str="list_to_init"/>
    <tok fileIndex="0" linenr="55" column="53" str=")"/>
    <tok fileIndex="0" linenr="55" column="54" str=";"/>
    <tok fileIndex="0" linenr="57" column="1" str="/** @brief Function used to append task to the running listx * @param[inout] task_to_run - task to set running.x */"/>
    <tok fileIndex="0" linenr="60" column="1" str="void"/>
    <tok fileIndex="0" linenr="60" column="6" str="Task_set_running"/>
    <tok fileIndex="0" linenr="60" column="22" str="("/>
    <tok fileIndex="0" linenr="60" column="23" str="p_task_ctl_t"/>
    <tok fileIndex="0" linenr="60" column="36" str="const"/>
    <tok fileIndex="0" linenr="60" column="42" str="task_to_run"/>
    <tok fileIndex="0" linenr="60" column="53" str=")"/>
    <tok fileIndex="0" linenr="60" column="54" str=";"/>
    <tok fileIndex="0" linenr="62" column="1" str="/** @brief Function used to append task to the idle listx * @param[in] time_to_idle - number of ticks to idle task.x */"/>
    <tok fileIndex="0" linenr="65" column="1" str="void"/>
    <tok fileIndex="0" linenr="65" column="6" str="Task_set_current_idle"/>
    <tok fileIndex="0" linenr="65" column="27" str="("/>
    <tok fileIndex="0" linenr="65" column="28" str="const"/>
    <tok fileIndex="0" linenr="65" column="34" str="rltos_uint"/>
    <tok fileIndex="0" linenr="65" column="45" str="time_to_idle"/>
    <tok fileIndex="0" linenr="65" column="57" str=")"/>
    <tok fileIndex="0" linenr="65" column="58" str=";"/>
    <tok fileIndex="0" linenr="67" column="1" str="/** @brief Function used to set the current task to wait on an object (uses auxillary list)x * @param[inout] owner - object to register waiting on.x * @param[in] time_to_wait - number of ticks to wait.x */"/>
    <tok fileIndex="0" linenr="71" column="1" str="void"/>
    <tok fileIndex="0" linenr="71" column="6" str="Task_set_current_wait_on_object"/>
    <tok fileIndex="0" linenr="71" column="37" str="("/>
    <tok fileIndex="0" linenr="71" column="38" str="p_task_list_t"/>
    <tok fileIndex="0" linenr="71" column="52" str="const"/>
    <tok fileIndex="0" linenr="71" column="58" str="owner"/>
    <tok fileIndex="0" linenr="71" column="63" str=","/>
    <tok fileIndex="0" linenr="71" column="65" str="const"/>
    <tok fileIndex="0" linenr="71" column="71" str="rltos_uint"/>
    <tok fileIndex="0" linenr="71" column="82" str="time_to_wait"/>
    <tok fileIndex="0" linenr="71" column="94" str=")"/>
    <tok fileIndex="0" linenr="71" column="95" str=";"/>
    <tok fileIndex="0" linenr="73" column="1" str="#"/>
    <tok fileIndex="0" linenr="73" column="2" str="endif"/>
    <tok fileIndex="0" linenr="73" column="8" str="/* RLTOS_TASK_LIST_H_ */"/>
    <tok fileIndex="0" linenr="75" column="1" str="/*! @} */"/>
  </rawtokens>
  <suppressions>
  </suppressions>
